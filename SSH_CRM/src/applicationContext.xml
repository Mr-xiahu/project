<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/context 
	                       http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop 
	                       http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx 
	                     
	                       http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">
	  <!-- 读取db.properties配置 -->
	  <context:property-placeholder location="classpath:db.properties"/>
	   
      <!-- 注入dataSouse -->
      <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
          <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		  <property name="driverClass" value="${jdbc.driverClass}"></property>
		  <property name="user" value="${jdbc.user}"></property>
		  <property name="password" value="${jdbc.password}"></property>
      </bean>
      <!-- ************************************************************************************** -->
      <!-- Spring与AOP事务整合 -->
      <!-- 基本配置:配置核心事务管理器 -->
      <bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
           <property name="sessionFactory" ref="sessionFactory"></property>
      </bean>
      <!-- 配置AOP事务的方式一:使用XML配置 -->
      <!-- 1.配置通知 -->
      <!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
           <tx:attributes>
                <tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			    <tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			    <tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			    <tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			    <tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			    <tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			    <tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
			    <tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
           </tx:attributes>
      </tx:advice>  -->
      <!-- 2.植入通知 -->
      <!-- <aop:config>
          <aop:pointcut expression="execution(* com.xiahu.service.impl.*ServiceImpl.*(..))" id="txPc"/>
          <aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"/>
      </aop:config>  -->
      
      <!-- 配置AOP事务的方式二:注解配置 -->
      <tx:annotation-driven transaction-manager="transactionManager"/>
      <!-- ************************************************************************************** -->

 
       <!-- ************************************************************************************** -->
	   <!-- hibernate与Spring结合(将sessionFactory部署到Spring容器中) -->
	   <!-- 方式一:夹杂怕配置信息,任然使用外部的hibernate。cfg.xml文件,不建议 -->
	   <!-- <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
	        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
	   </bean> -->
	   <!-- 方式二:在spring配置中放置hibernate配置信息 -->
	   <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
	        <!-- 注入dataSource -->
	        <property name="dataSource" ref="dataSource"></property>
	        <!-- 配置hibernate基本信息 -->
	        <property name="hibernateProperties">	            
	            <props>
	                <!-- 1.必选信息配置 -->
	                <!-- <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
	                <prop key="hibernate.connection.url">jdbc:mysql:///ssh_crm</prop>
	                <prop key="hibernate.connection.username">root</prop>
	                <prop key="hibernate.connection.password">root</prop> -->
	                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
	                <!-- 2.可选信息配置 -->	                
	                <prop key="hibernate.show_sql">true</prop>
	                <prop key="hibernate.format_sql">true</prop>
	                <prop key="hibernate.hbm2ddl.auto">update</prop>
	            </props>	            
	        </property>
	        <!-- orm元数据配置 -->
	        <property name="mappingDirectoryLocations" value="classpath:com/xiahu/domain" ></property>
	   </bean>
	   <!-- ************************************************************************************** -->
	   
	   <!-- 自动扫描类中的注解 --> 
	   <context:component-scan base-package="com.xiahu"></context:component-scan>
	    
	    
	   <!-- 配置userAction -->                    	                       
	   <!-- <bean name="userAction" class="com.xiahu.web.action.UserAction">
	       <property name="userService" ref="userService"></property>
	   </bean>
	   <bean name="customerAction" class="com.xiahu.web.action.CustomerAction">
	       <property name="cs" ref="customerService"></property>
	   </bean> 
	   <bean name="baseDictAction" class="com.xiahu.web.action.BaseDictAction">
	       <property name="baseDictService" ref="baseDictService"></property>
	   </bean> 
	   <bean name="linkManAction" class="com.xiahu.web.action.LinkManAction">
	       <property name="lms" ref="linkManService"></property>
	   </bean> 
	   <bean name="saleVisitAction" class="com.xiahu.web.action.SaleVisitAction">
	       <property name="svs" ref="saleVisitService"></property>
	   </bean> -->
	   
	   <!-- 配置userService -->    
	   <!-- <bean name="userService" class="com.xiahu.service.impl.UserServiceImpl">
	        <property name="ud" ref="userDao"></property>
	   </bean>
	   <bean name="customerService" class="com.xiahu.service.impl.CustomerServiceImpl">
	        <property name="cd" ref="customerDao"></property>
	   </bean>
	   <bean name="baseDictService" class="com.xiahu.service.impl.BaseDictServiceImpl">
	        <property name="baseDictDao" ref="baseDiceDao"></property>
	   </bean>
	   <bean name="linkManService" class="com.xiahu.service.impl.LinkManServiceImpl">
	        <property name="lmd" ref="linkManDao"></property>
	   </bean>
	   <bean name="saleVisitService" class="com.xiahu.service.impl.SaleVisitServiceImpl">
	        <property name="svd" ref="saleVisitDao"></property>
	   </bean> -->
	   
	   <!-- 配置userDao -->        
	   <!-- <bean name="userDao" class="com.xiahu.dao.impl.UserDaoImpl">
	       <property name="sessionFactory" ref="sessionFactory"></property>
	   </bean> 
	   <bean name="customerDao" class="com.xiahu.dao.impl.CustomerDaoImpl">
	       <property name="sessionFactory" ref="sessionFactory"></property>
	   </bean> 
	   <bean name="baseDiceDao" class="com.xiahu.dao.impl.BaseDictDaoImpl">
	       <property name="sessionFactory" ref="sessionFactory"></property>
	   </bean> 
	   <bean name="linkManDao" class="com.xiahu.dao.impl.LinkManDaoImpl">
	       <property name="sessionFactory" ref="sessionFactory"></property>
	   </bean> 
	   <bean name="saleVisitDao" class="com.xiahu.dao.impl.SaleVisitDaoImpl">
	       <property name="sessionFactory" ref="sessionFactory"></property>
	   </bean>   	   -->                     
</beans>